version: '3.8'

services:
  database:
    container_name: ms-movie-database
    image: postgres
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: ms-movie
    ports:
      - "5415:5432"
    expose:
      - 5432
    volumes:
      - database-volume:/var/lib/postgresql/data
    networks:
      - internal-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "ms-movie" ]
      interval: 3s
      timeout: 10s
      retries: 2
  ms-movie:
    container_name: ms-movie-api
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        PROFILE: $PROFILE
        PORT: $PORT
    env_file:
      - .env
    image: ms-movie-image
    labels:
      org.springframework.boot.ignore: true
    expose:
      - $PORT
    ports:
      - "8085:$PORT"
    networks:
      - internal-network
    depends_on:
      database:
        condition: service_healthy
  ms-movie-native:
    container_name: ms-movie-api-native
    env_file:
      - .env
    image: ms-movie:0.0.1-SNAPSHOT
    labels:
      org.springframework.boot.ignore: true
    expose:
      - $PORT
    ports:
      - "8085:$PORT"
    networks:
      - internal-network
    depends_on:
      database:
        condition: service_healthy
volumes:
  database-volume:
    name: ms-movie-database-volume
networks:
  internal-network:
    name: ms-movie-network